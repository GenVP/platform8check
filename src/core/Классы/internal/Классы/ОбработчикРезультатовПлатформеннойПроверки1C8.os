#Использовать logos
#Использовать tempfiles
#Использовать reflector

Перем ТаблицаОшибок;
Перем КодыОшибок;
Перем ТипыОбъектов;
Перем КаталогИсходников;
Перем ФильтрыПроверкиФайлов;
Перем ФильтрыПроверкиОбъектов; 

Перем Лог;

#Область Конструктор

// BSLLS:UnusedLocalMethod-off
Процедура ПриСозданииОбъекта(ПарамЛог)

	Лог = ПарамЛог;

	ТаблицаОшибок = НоваяТаблицаОшибок();
	КодыОшибок = ТаблицаКодовОшибок();
	ТипыОбъектов = ТаблицаТиповОбъектов();
	ФильтрыПроверкиФайлов = Новый Массив;
	ФильтрыПроверкиОбъектов = Новый Массив;

КонецПроцедуры
// BSLLS:UnusedLocalMethod-on

#КонецОбласти

#Область ПрограммныйИнтерфейс

Процедура УстановитьКаталогИсходныхКодов(Знач ПарамКаталогИсходников) Экспорт
	
	КаталогИсходников = ПарамКаталогИсходников;

	РазделительПути = ПолучитьРазделительПути();
	Если РазделительПути = "\" Тогда
		КаталогИсходников = СтрЗаменить(КаталогИсходников, "/", РазделительПути);
	Иначе
		КаталогИсходников = СтрЗаменить(КаталогИсходников, "\", РазделительПути);
	КонецЕсли; 
	Если Прав(КаталогИсходников, 1) <> РазделительПути Тогда
		КаталогИсходников = КаталогИсходников + РазделительПути;
	КонецЕсли;

КонецПроцедуры

// Добавляет объект для ограничения обрабатываемых файлов или объектов
//
// Параметры:
//   ФильтрПроворки - Объект - объект реализующий метод "ПроверитьФайл(ПутьКФайлу)" или "ПроверитьОбъект(ПутьКОбъекту)"
//
Процедура ДобавитьФильтр(ФильтрПроверки) Экспорт

	Интерфейс = Новый ИнтерфейсОбъекта();
	Интерфейс.П("ПроверитьФайл", 1);
	Интерфейс.П("ПроверитьОбъект", 1);

	Рефлектор = Новый РефлекторОбъекта(ФильтрПроверки);
	РеализованныеМетоды = Рефлектор.РеализованныеМетодыИнтерфейса(Интерфейс);

	Если НЕ РеализованныеМетоды.ПроверитьФайл И НЕ РеализованныеМетоды.ПроверитьОбъект Тогда
		ВызватьИсключение "Фильтр не реализует интерфейс проверки";
	КонецЕсли; 

	Если РеализованныеМетоды.ПроверитьФайл Тогда
		ФильтрыПроверкиФайлов.Добавить(ФильтрПроверки);
	КонецЕсли;
	Если РеализованныеМетоды.ПроверитьОбъект Тогда
		ФильтрыПроверкиОбъектов.Добавить(ФильтрПроверки);
	КонецЕсли;

КонецПроцедуры

Процедура УдалитьВсеФильтры() Экспорт

	ФильтрыПроверкиФайлов.Очистить();
	ФильтрыПроверкиОбъектов.Очистить();

КонецПроцедуры

Процедура ОбработатьФайлРезультата(Знач ФайлРезультатаПроверки) Экспорт

	Лог.Отладка("[%1] Начало Обработка ошибок для %2", ТекущаяДата(), ФайлРезультатаПроверки);

	ДокументТекст = Новый ТекстовыйДокумент;
	ДокументТекст.Прочитать(ФайлРезультатаПроверки);
	ТекстФайлаПроверкиКонфигурации = ДокументТекст.ПолучитьТекст();
	ТекстФайлаПроверкиКонфигурации = СокрЛП(ТекстФайлаПроверкиКонфигурации);
	ДокументТекст = Неопределено;
	
	// Проверка на ошибки генерации файла или отсутствие ошибок
	Если ФайлНеСодержитОшибок(ТекстФайлаПроверкиКонфигурации) Тогда
		Возврат;
	КонецЕсли;

	КоличествоСтрок = СтрЧислоСтрок(ТекстФайлаПроверкиКонфигурации);
	Для НомерСтроки = 1 По КоличествоСтрок Цикл
		
		ТекСтрока = СтрПолучитьСтроку(ТекстФайлаПроверкиКонфигурации, НомерСтроки);

		// Строка с вопросом должна была быть обработана с предыдущей строкой
		Если СтрНайти(ТекСтрока, "<<?>>") > 0 Тогда
			Лог.Ошибка("Некорректный разбор файла. Найден <<?>> в новой строке ошибки. 
				|	Текущая строка %1", ТекСтрока);
			Продолжить;
		КонецЕсли;

		Если НомерСтроки < КоличествоСтрок Тогда
			СледСтрока = СтрПолучитьСтроку(ТекстФайлаПроверкиКонфигурации, НомерСтроки + 1);
			Если СтрНайти(СледСтрока, "<<?>>") > 0 Тогда
				НомерСтроки = НомерСтроки + 1;
			Иначе
				СледСтрока = "";
			КонецЕсли;
		Иначе
			СледСтрока = "";
		КонецЕсли;

		ПараметрыОшибки = ПолучитьПараметрыОшибки(ТекСтрока, СледСтрока);
		Если ПараметрыОшибки = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		ОписаниеОшибки = ПолучитьОписаниеОшибки(ПараметрыОшибки);
		Если ОписаниеОшибки = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		ФильтрПройден = Истина;

		Для Каждого ФильтрОбъекта Из ФильтрыПроверкиОбъектов Цикл
			Если НЕ ФильтрОбъекта.ПроверитьОбъект(ПараметрыОшибки.ПутЬКОбъекту) Тогда
				ФильтрПройден = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если НЕ ФильтрПройден Тогда
			Продолжить;
		КонецЕсли;

		ПараметрыОшибки.ПутьКФайлу = ПреобразоватьОбъектВФайл(ПараметрыОшибки.ПутьКОбъекту, НЕ ОписаниеОшибки.ЭтоФорма);
	
		Для Каждого ФильтрФайла Из ФильтрыПроверкиФайлов Цикл
			Если НЕ ФильтрФайла.ПроверитьФайл(ПараметрыОшибки.ПутьКФайлу) Тогда
				ФильтрПройден = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если НЕ ФильтрПройден Тогда
			Продолжить;
		КонецЕсли;

		ЗаполнитьПозициюВФайлеОшибки(ПараметрыОшибки, ОписаниеОшибки);
		ДобавитьНовуюОшибку(ПараметрыОшибки, ОписаниеОшибки);

	КонецЦикла;

	Лог.Отладка("[%1] Окончание Обработка ошибок для %2", ТекущаяДата(), ФайлРезультатаПроверки);

КонецПроцедуры

Функция ТаблицаОшибок() Экспорт

	Возврат ТаблицаОшибок;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыФункции

Функция НоваяТаблицаОшибок()

	ТаблицаОшибок = Новый ТаблицаЗначений();
	ТаблицаОшибок.Колонки.Добавить("ПутьКОбъекту");
	ТаблицаОшибок.Колонки.Добавить("ПутьКФайлу");
	ТаблицаОшибок.Колонки.Добавить("Уточнение");
	ТаблицаОшибок.Колонки.Добавить("Критичная");
	ТаблицаОшибок.Колонки.Добавить("ОписаниеОшибки");
	ТаблицаОшибок.Колонки.Добавить("НачальнаяСтрока");
	ТаблицаОшибок.Колонки.Добавить("НачальнаяКолонка");
	ТаблицаОшибок.Колонки.Добавить("КонечнаяКолонка");
	
	ТаблицаОшибок.Колонки.Добавить("Статус");
	ТаблицаОшибок.Колонки.Добавить("КодОшибки");
	ТаблицаОшибок.Колонки.Добавить("ТекстОшибки");

	Возврат ТаблицаОшибок;

КонецФункции

Функция ФайлНеСодержитОшибок(ТекстФайлаПроверкиКонфигурации)

	ПреоопределенныеРезультаты = Новый Массив;
	ПреоопределенныеРезультаты.Добавить(НСтр("ru='Ошибок не обнаружено'"));
	ПреоопределенныеРезультаты.Добавить(НСтр("ru='No errors found'"));
	ПреоопределенныеРезультаты.Добавить(НСтр("ru='Пользователь ИБ не идентифицирован'"));

	Для Каждого ТекстРезультата Из ПреоопределенныеРезультаты Цикл
		Если СтрСравнить(ТекстФайлаПроверкиКонфигурации, ТекстРезультата) = 0 Тогда
			Лог.Отладка("[%1] %2", ТекущаяДата(), ТекстФайлаПроверкиКонфигурации);
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;

	Возврат Ложь;

КонецФункции

Функция ЭтоНеобрабатываемаяОшибка(Знач ТекСтрока, Знач СледСтрока)

	Результат = Ложь;
	
	Если СтрНайти(ТекСтрока, НСтр("ru='Неправильные пути к данным'")) > 0
		ИЛИ СтрНайти(ТекСтрока, НСтр("ru='Неразрешимые ссылки'")) > 0 Тогда
		Результат = Истина;
	КонецЕсли;

	Если СтрНайти(ТекСтрока, НСтр("ru='Не обнаружено ссылок на процедуру'")) > 0
		И СтрНайти(ТекСтрока, НСтр("ru='Подключаемый_'")) > 0 Тогда
		Результат = Истина;
	КонецЕсли;

	Возврат Результат;

КонецФункции

Функция ПолучитьПараметрыОшибки(ТекСтрока, СледСтрока)

	Если ЭтоНеобрабатываемаяОшибка(ТекСтрока, СледСтрока) Тогда
		Возврат Неопределено; // Не обрабатываемые ошибки
	КонецЕсли;
		
	ПозПервогоПробела = СтрНайти(ТекСтрока, " ");
	Если ПозПервогоПробела = 0 Тогда
		Лог.Ошибка("Некорректный формат строки ошибки.
		|	Текущая строка %1", ТекСтрока);
		Возврат Неопределено; // Некорректная строка ошибки
	КонецЕсли;
	
	ОписаниеОшибки = Новый Структура("ПутьКФайлу,ПутьКОбъекту,Описание,Уточнение,НачСтрока,НачКолонка,КонКолонка");

	ОписаниеОшибки.Вставить("ТекСтрока", ТекСтрока);
	ОписаниеОшибки.Вставить("СледСтрока", СледСтрока);

	ТипЧисло = Новый ОписаниеТипов("Число");
	
	ПозКруглойСкобки = СтрНайти(ТекСтрока, "(");
	ПозФигурнойСкобки = СтрНайти(ТекСтрока, "{");
	Если ПозФигурнойСкобки = 0 Тогда
		// Общие ошибки без указания позиции в коде
		ОписаниеОшибки.ПутьКОбъекту = Лев(ТекСтрока, ПозПервогоПробела - 1);
		ОписаниеОшибки.Описание = Сред(ТекСтрока, ПозПервогоПробела + 1);
		ОписаниеОшибки.Уточнение = "";
		ОписаниеОшибки.НачСтрока = 0;
		ОписаниеОшибки.НачКолонка = 0;
	Иначе
		// Ошибки с указание позиции в коде
		ПозПервойЗапятой = СтрНайти(ТекСтрока, ",");
		ПозВторойКруглойСкобки = СтрНайти(ТекСтрока, ")", , ПозПервойЗапятой);
		ОписаниеОшибки.ПутьКОбъекту = Сред(ТекСтрока, ПозФигурнойСкобки + 1, ПозКруглойСкобки - ПозФигурнойСкобки - 1);
		ОписаниеОшибки.Описание = СокрЛП(Сред(ТекСтрока, ПозПервогоПробела + 1));
		ОписаниеОшибки.Уточнение = "";
		ОписаниеОшибки.НачСтрока = ТипЧисло.ПривестиЗначение(
			Сред(ТекСтрока, ПозКруглойСкобки + 1, ПозПервойЗапятой - ПозКруглойСкобки - 1));
		ОписаниеОшибки.НачКолонка = ТипЧисло.ПривестиЗначение(
			Сред(ТекСтрока, ПозПервойЗапятой + 1, ПозВторойКруглойСкобки - ПозПервойЗапятой - 1));
	КонецЕсли;

	// Если на следующей строке находится текст с <<?>>, то это уточнение ошибки
	Если НЕ ПустаяСтрока(СледСтрока) Тогда
		ОписаниеОшибки.Уточнение = СокрЛП(СледСтрока);
		// Если была задана позиция в модуле, то установка выделения на весь код уточнения
		ПозицияВопроса = СтрНайти(СледСтрока, "<<?>>");
		Если ОписаниеОшибки.НачКолонка <> 0 Тогда
			Если ПозицияВопроса = 2 Тогда
				// Вопрос указывает на начало кода ошибки
				ОшибочныйКод = СледСтрока;
				ПозицияПроверка = СтрНайти(ОшибочныйКод, "(Проверка");
				Если ПозицияПроверка > 0 Тогда
					ОшибочныйКод = СокрП(Лев(ОшибочныйКод, ПозицияПроверка - 1));
				КонецЕсли;
				ОшибочныйКод = Сред(ОшибочныйКод, ПозицияВопроса + СтрДлина("<<?>>"));
				ОписаниеОшибки.КонКолонка = ОписаниеОшибки.НачКолонка + СтрДлина(ОшибочныйКод) - 1;
			Иначе
				// Вопрос указывает на конец кода ошибки
				ОшибочныйКод = СокрЛП(Лев(СледСтрока, ПозицияВопроса - 1));
				ОписаниеОшибки.НачКолонка = ОписаниеОшибки.НачКолонка - СтрДлина(ОшибочныйКод);
				ОписаниеОшибки.КонКолонка = ОписаниеОшибки.НачКолонка + СтрДлина(ОшибочныйКод) - 1;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Возврат ОписаниеОшибки;
	
КонецФункции

Процедура ЗаполнитьПозициюВФайлеОшибки(ПараметрыОшибки, ОписаниеОшибки)

	ЭтоМодуль = НЕ ОписаниеОшибки.ЭтоФорма;

	// Если для найденной ошибки не задается позиция в файле, то определяем позицию поиском в файле
	Если ОписаниеОшибки.ПроверятьФайл Тогда
		
		// Исключение из текста ошибки её названия по шаблону
		ПроверяемаяСтрока = СокрЛ(Сред(ПараметрыОшибки.Описание, СтрДлина(ОписаниеОшибки.Шаблон) + 1));
		Если Лев(ПроверяемаяСтрока, 1) = ":" Тогда
			ПроверяемаяСтрока = СокрЛ(Сред(ПроверяемаяСтрока, 2));
		КонецЕсли;
		
		ПроверяемыеСтроки = СтрРазделить(ПроверяемаяСтрока, " ", Ложь);
		// Если ошибочный код для ошибки заключается в кавычки, то кавычки исключаются
		Если ОписаниеОшибки.ИсключатьКовычки Тогда
			Для НомЭлемента = 1 По ПроверяемыеСтроки.Количество() Цикл
				ПроверяемаяСтрока = ПроверяемыеСтроки[НомЭлемента - 1];
				НачПозКовычки = СтрНайти(ПроверяемаяСтрока, """", НаправлениеПоиска.СНачала);
				КонПозКовычки = СтрНайти(ПроверяемаяСтрока, """", НаправлениеПоиска.СКонца);
				Если НачПозКовычки <> 0 И КонПозКовычки <> 0 И НачПозКовычки <> КонПозКовычки Тогда
					ПроверяемаяСтрока = Сред(Лев(ПроверяемаяСтрока, КонПозКовычки - 1), НачПозКовычки + 1);
				КонецЕсли;
				ПроверяемыеСтроки[НомЭлемента - 1] = ПроверяемаяСтрока;
			КонецЦикла;
		КонецЕсли;
		
		Если НЕ ЭтоМодуль Тогда
			// Поиск имени элемента в xml описании формы 
			ТекстДок = Новый ЧтениеТекста;
			ТекстДок.Открыть(ОписаниеОшибки.ПутьКФайлу);
			ИмяЭлемента = ПроверяемыеСтроки[0];
			Обработчик = ПроверяемыеСтроки[1];
			ТекстДок.Закрыть();
		Иначе
			// Поиск строки ошибки в коде модуля построчно, пропуская строки с комментариями
			ТекстДок = Новый ЧтениеТекста;
			ТекстДок.Открыть(КаталогИсходников + ПараметрыОшибки.ПутьКФайлу);
			НачальнаяСтрока = 1;
			СтрокаФайла = ТекстДок.ПрочитатьСтроку();
			Пока СтрокаФайла <> Неопределено Цикл
				Если Лев(СокрЛ(СтрокаФайла), 2) <> "//" Тогда
					НачальнаяКолонка = СтрНайти(СтрокаФайла, ПроверяемаяСтрока);
					Если НачальнаяКолонка <> 0 Тогда
						ПараметрыОшибки.НачСтрока = НачальнаяСтрока;
						ПараметрыОшибки.НачКолонка = НачальнаяКолонка - 1;
						ПараметрыОшибки.КонКолонка = ПараметрыОшибки.НачКолонка + СтрДлина(ПроверяемаяСтрока) - 1;
						Прервать;
					КонецЕсли;
				КонецЕсли;
				СтрокаФайла = ТекстДок.ПрочитатьСтроку();
				НачальнаяСтрока = НачальнаяСтрока + 1;
			КонецЦикла;
			ТекстДок.Закрыть();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьОписаниеОшибки(ПараметрыОшибки)

	ОписаниеОшибки = КодыОшибок[0];

	// Сопоставление сообщения об ошибке с кодом ошибки
	Для НомОшибки = 2 По КодыОшибок.Количество() Цикл
		СтрокаОшибки = КодыОшибок[НомОшибки - 1];
		Если СтрНайти(ПараметрыОшибки.Описание, СтрокаОшибки.Шаблон) <> 0 Тогда
			ОписаниеОшибки = СтрокаОшибки;
			Прервать;
		КонецЕсли;
	КонецЦикла;

	Если ОписаниеОшибки.ЭтоФорма Тогда
		Лог.Ошибка(
			"Ошибки формы не поддерживаются. Пропуск ошибки.
			|	Ошибка = %1
			|	ПутьКОбъекту = %2",
			ПараметрыОшибки.ТекСтрока, ПараметрыОшибки.ПутьКОбъекту);
		Возврат Неопределено;
	КонецЕсли;

	Возврат ОписаниеОшибки;

КонецФункции

Функция ТаблицаКодовОшибок()
	
	ТипБулево = Новый ОписаниеТипов("Булево");

	КодыОшибок = Новый ТаблицаЗначений;
	КодыОшибок.Колонки.Добавить("Код");
	КодыОшибок.Колонки.Добавить("Шаблон");
	КодыОшибок.Колонки.Добавить("Статус");
	КодыОшибок.Колонки.Добавить("ЭтоФорма", ТипБулево);
	КодыОшибок.Колонки.Добавить("ПроверятьФайл", ТипБулево);
	КодыОшибок.Колонки.Добавить("ИсключатьКовычки", ТипБулево);
	
	СтрокаОшибки = КодыОшибок.Добавить();
	СтрокаОшибки.Код = "561";
	СтрокаОшибки.Шаблон = "Ошибка платформенной проверки";
	СтрокаОшибки.Статус = "Error";
	
	СтрокаОшибки = КодыОшибок.Добавить();
	СтрокаОшибки.Код = "562";
	СтрокаОшибки.Шаблон = "Возможно ошибочное свойство";
	СтрокаОшибки.Статус = "Error";
	СтрокаОшибки.ПроверятьФайл = Истина;
	
	СтрокаОшибки = КодыОшибок.Добавить();
	СтрокаОшибки.Код = "563";
	СтрокаОшибки.Шаблон = "Возможно ошибочный метод";
	СтрокаОшибки.Статус = "Error";
	СтрокаОшибки.ПроверятьФайл = Истина;
	
	СтрокаОшибки = КодыОшибок.Добавить();
	СтрокаОшибки.Код = "564";
	СтрокаОшибки.Шаблон = "Возможно ошибочный параметр";
	СтрокаОшибки.Статус = "Error";
	СтрокаОшибки.ПроверятьФайл = Истина;
	
	СтрокаОшибки = КодыОшибок.Добавить();
	СтрокаОшибки.Код = "565";
	СтрокаОшибки.Шаблон = "Использование модального вызова";
	СтрокаОшибки.Статус = "Error";
	
	СтрокаОшибки = КодыОшибок.Добавить();
	СтрокаОшибки.Код = "566";
	СтрокаОшибки.Шаблон = "Использование синхронного вызова";
	СтрокаОшибки.Статус = "Error";
	
	СтрокаОшибки = КодыОшибок.Добавить();
	СтрокаОшибки.Код = "567";
	СтрокаОшибки.Шаблон = "Не обнаружено ссылок на процедуру";
	СтрокаОшибки.Статус = "Warning";
	СтрокаОшибки.ПроверятьФайл = Истина;
	СтрокаОшибки.ИсключатьКовычки = Истина;
	
	СтрокаОшибки = КодыОшибок.Добавить();
	СтрокаОшибки.Код = "568";
	СтрокаОшибки.Шаблон = "Не обнаружено ссылок на функцию";
	СтрокаОшибки.Статус = "Warning";
	СтрокаОшибки.ПроверятьФайл = Истина;
	СтрокаОшибки.ИсключатьКовычки = Истина;
	
	СтрокаОшибки = КодыОшибок.Добавить();
	СтрокаОшибки.Код = "569";
	СтрокаОшибки.Шаблон = "Неразрешимые ссылки на объекты метаданных";
	СтрокаОшибки.Статус = "Error";
	
	СтрокаОшибки = КодыОшибок.Добавить();
	СтрокаОшибки.Код = "570";
	СтрокаОшибки.Шаблон = "Отсутствует обработчик";
	СтрокаОшибки.Статус = "Warrnig";
	СтрокаОшибки.ЭтоФорма = Истина;
	СтрокаОшибки.ПроверятьФайл = Истина;
	СтрокаОшибки.ИсключатьКовычки = Истина;
	
	СтрокаОшибки = КодыОшибок.Добавить();
	СтрокаОшибки.Код = "571";
	СтрокаОшибки.Шаблон = "Переменная не определена";
	СтрокаОшибки.Статус = "Error";
	
	СтрокаОшибки = КодыОшибок.Добавить();
	СтрокаОшибки.Код = "572";
	СтрокаОшибки.Шаблон = "Процедура или функция с указанным именем не определена";
	СтрокаОшибки.Статус = "Error";
	
	СтрокаОшибки = КодыОшибок.Добавить();
	СтрокаОшибки.Код = "573";
	СтрокаОшибки.Шаблон = "Пустой обработчик";
	СтрокаОшибки.Статус = "Warning";
	СтрокаОшибки.ПроверятьФайл = Истина;
	СтрокаОшибки.ИсключатьКовычки = Истина;
	
	Возврат КодыОшибок;
	
КонецФункции

Функция ТаблицаТиповОбъектов()
	
	ТаблицаТиповОбъектов = Новый ТаблицаЗначений;
	ТаблицаТиповОбъектов.Колонки.Добавить("Группа");
	ТаблицаТиповОбъектов.Колонки.Добавить("Имя");
	ТаблицаТиповОбъектов.Колонки.Добавить("ИмяМнФормы");
	ТаблицаТиповОбъектов.Колонки.Добавить("ИмяАнгл");
	ТаблицаТиповОбъектов.Колонки.Добавить("ИмяАнглМнФормы");
	ТаблицаТиповОбъектов.Колонки.Добавить("ТипОбъекта");
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Constant";
	СтрокаТипаОбъекта.Имя = "Константа";
	СтрокаТипаОбъекта.ИмяМнФормы = "Константы";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Constants";
	СтрокаТипаОбъекта.ТипОбъекта = "Константа";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Catalog";
	СтрокаТипаОбъекта.Имя = "Справочник";
	СтрокаТипаОбъекта.ИмяМнФормы = "Справочники";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Catalogs";
	СтрокаТипаОбъекта.ТипОбъекта = "Справочник";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Document";
	СтрокаТипаОбъекта.Имя = "Документ";
	СтрокаТипаОбъекта.ИмяМнФормы = "Документы";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Documents";
	СтрокаТипаОбъекта.ТипОбъекта = "Документ";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "DocumentJournal";
	СтрокаТипаОбъекта.Имя = "ЖурналДокументов";
	СтрокаТипаОбъекта.ИмяМнФормы = "ЖурналыДокументов";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "DocumentJournals";
	СтрокаТипаОбъекта.ТипОбъекта = "ЖурналДокументов";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Enum";
	СтрокаТипаОбъекта.Имя = "Перечисление";
	СтрокаТипаОбъекта.ИмяМнФормы = "Перечисления";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Enums";
	СтрокаТипаОбъекта.ТипОбъекта = "Перечисление";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Report";
	СтрокаТипаОбъекта.Имя = "Отчет";
	СтрокаТипаОбъекта.ИмяМнФормы = "Отчеты";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Reports";
	СтрокаТипаОбъекта.ТипОбъекта = "Отчет";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "DataProcessor";
	СтрокаТипаОбъекта.Имя = "Обработка";
	СтрокаТипаОбъекта.ИмяМнФормы = "Обработки";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "DataProcessors";
	СтрокаТипаОбъекта.ТипОбъекта = "Обработка";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "ChartOfCharacteristicTypes";
	СтрокаТипаОбъекта.Имя = "ПланВидовХарактеристик";
	СтрокаТипаОбъекта.ИмяМнФормы = "ПланыВидовХарактеристик";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "ChartsOfCharacteristicTypes";
	СтрокаТипаОбъекта.ТипОбъекта = "ПланВидовХарактеристик";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "ChartOfAccounts";
	СтрокаТипаОбъекта.Имя = "ПланСчетов";
	СтрокаТипаОбъекта.ИмяМнФормы = "ПланыСчетов";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "ChartsOfAccounts";
	СтрокаТипаОбъекта.ТипОбъекта = "ПланСчетов";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "ChartOfCalculationTypes";
	СтрокаТипаОбъекта.Имя = "ПланВидовРасчета";
	СтрокаТипаОбъекта.ИмяМнФормы = "ПланыВидовРасчета";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "ChartsOfCalculationTypes";
	СтрокаТипаОбъекта.ТипОбъекта = "ПланВидовРасчета";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "InformationRegister";
	СтрокаТипаОбъекта.Имя = "РегистрСведений";
	СтрокаТипаОбъекта.ИмяМнФормы = "РегистрыСведений";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "InformationRegisters";
	СтрокаТипаОбъекта.ТипОбъекта = "РегистрСведений";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "AccumulationRegister";
	СтрокаТипаОбъекта.Имя = "РегистрНакопления";
	СтрокаТипаОбъекта.ИмяМнФормы = "РегистрыНакопления";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "AccumulationRegisters";
	СтрокаТипаОбъекта.ТипОбъекта = "РегистрНакопления";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "AccountingRegister";
	СтрокаТипаОбъекта.Имя = "РегистрБухгалтерии";
	СтрокаТипаОбъекта.ИмяМнФормы = "РегистрыБухгалтерии";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "AccountingRegisters";
	СтрокаТипаОбъекта.ТипОбъекта = "РегистрБухгалтерии";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "CalculationRegister";
	СтрокаТипаОбъекта.Имя = "РегистрРасчета";
	СтрокаТипаОбъекта.ИмяМнФормы = "РегистрыРасчета";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "CalculationRegisters";
	СтрокаТипаОбъекта.ТипОбъекта = "РегистрРасчета";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "BusinessProcess";
	СтрокаТипаОбъекта.Имя = "БизнесПроцесс";
	СтрокаТипаОбъекта.ИмяМнФормы = "БизнесПроцессы";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "BusinessProcesses";
	СтрокаТипаОбъекта.ТипОбъекта = "БизнесПроцесс";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Task";
	СтрокаТипаОбъекта.Имя = "Задача";
	СтрокаТипаОбъекта.ИмяМнФормы = "Задачи";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Tasks";
	СтрокаТипаОбъекта.ТипОбъекта = "Задача";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Form";
	СтрокаТипаОбъекта.Имя = "Форма";
	СтрокаТипаОбъекта.ИмяМнФормы = "Формы";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Forms";
	СтрокаТипаОбъекта.ТипОбъекта = "УправляемаяФорма";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Attribute";
	СтрокаТипаОбъекта.Имя = "Реквизит";
	СтрокаТипаОбъекта.ИмяМнФормы = "Реквизиты";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Attributes";
	СтрокаТипаОбъекта.ТипОбъекта = "Реквизит";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "ExchangePlan";
	СтрокаТипаОбъекта.Имя = "ПланОбмена";
	СтрокаТипаОбъекта.ИмяМнФормы = "ПланыОбмена";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "ExchangePlans";
	СтрокаТипаОбъекта.ТипОбъекта = "ПланОбмена";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Characteristic";
	СтрокаТипаОбъекта.Имя = "Характеристика";
	СтрокаТипаОбъекта.ИмяМнФормы = "Характеристика";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Characteristics";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Sequence";
	СтрокаТипаОбъекта.Имя = "Последовательность";
	СтрокаТипаОбъекта.ИмяМнФормы = "Последовательности";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Sequences";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Recalculation";
	СтрокаТипаОбъекта.Имя = "Перерасчет";
	СтрокаТипаОбъекта.ИмяМнФормы = "Перерасчеты";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Recalculations";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Dimension";
	СтрокаТипаОбъекта.Имя = "Измерение";
	СтрокаТипаОбъекта.ИмяМнФормы = "Измерения";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Dimensions";
	СтрокаТипаОбъекта.ТипОбъекта = "Измерение";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Resource";
	СтрокаТипаОбъекта.Имя = "Ресурс";
	СтрокаТипаОбъекта.ИмяМнФормы = "Ресурсы";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Resources";
	СтрокаТипаОбъекта.ТипОбъекта = "Ресурс";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "TabularSection";
	СтрокаТипаОбъекта.Имя = "ТабличнаяЧасть";
	СтрокаТипаОбъекта.ИмяМнФормы = "ТабличныеЧасти";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "TabularSections";
	СтрокаТипаОбъекта.ТипОбъекта = "ТабличнаяЧасть";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Attribute";
	СтрокаТипаОбъекта.Имя = "Реквизит";
	СтрокаТипаОбъекта.ИмяМнФормы = "РеквизитыТабличнойЧасти";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "AttributesTabularSections";
	СтрокаТипаОбъекта.ТипОбъекта = "Реквизит";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Command";
	СтрокаТипаОбъекта.Имя = "Команда";
	СтрокаТипаОбъекта.ИмяМнФормы = "Команды";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Commands";
	СтрокаТипаОбъекта.ТипОбъекта = "Команда";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "Role";
	СтрокаТипаОбъекта.Имя = "Роль";
	СтрокаТипаОбъекта.ИмяМнФормы = "Роли";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Roles";
	СтрокаТипаОбъекта.ТипОбъекта = "Роль";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "SessionParameter";
	СтрокаТипаОбъекта.Имя = "ПараметрСеанса";
	СтрокаТипаОбъекта.ИмяМнФормы = "ПараметрыСеанса";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "SessionParameters";
	СтрокаТипаОбъекта.ТипОбъекта = "ПараметрСеанса";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "CommonModule";
	СтрокаТипаОбъекта.Имя = "ОбщийМодуль";
	СтрокаТипаОбъекта.ИмяМнФормы = "ОбщиеМодули";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "CommonModules";
	СтрокаТипаОбъекта.ТипОбъекта = "ОбщийМодуль";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "FilterCriterion";
	СтрокаТипаОбъекта.Имя = "КритерийОтбора";
	СтрокаТипаОбъекта.ИмяМнФормы = "КритерииОтбора";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "FilterCriteria";
	СтрокаТипаОбъекта.ТипОбъекта = "КритерийОтбора";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "EventSubscription";
	СтрокаТипаОбъекта.Имя = "ПодпискаНаСобытие";
	СтрокаТипаОбъекта.ИмяМнФормы = "ПодпискиНаСобытия";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "EventSubscriptions";
	СтрокаТипаОбъекта.ТипОбъекта = "ПодпискаНаСобытия";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "ScheduledJob";
	СтрокаТипаОбъекта.Имя = "РегламентноеЗадание";
	СтрокаТипаОбъекта.ИмяМнФормы = "РегламентныеЗадания";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "ScheduledJobs";
	СтрокаТипаОбъекта.ТипОбъекта = "РегламентноеЗадание";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "SettingsStorage";
	СтрокаТипаОбъекта.Имя = "ХранилищеНастроек";
	СтрокаТипаОбъекта.ИмяМнФормы = "ХранилищаНастроек";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "SettingsStorages";
	СтрокаТипаОбъекта.ТипОбъекта = "ХранилищеНастроек";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "CommonForm";
	СтрокаТипаОбъекта.Имя = "ОбщаяФорма";
	СтрокаТипаОбъекта.ИмяМнФормы = "ОбщиеФормы";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "CommonForms";
	СтрокаТипаОбъекта.ТипОбъекта = "ОбщаяУправляемаяФорма";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "CommonCommand";
	СтрокаТипаОбъекта.Имя = "ОбщаяКоманда";
	СтрокаТипаОбъекта.ИмяМнФормы = "ОбщиеКоманды";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "CommonCommands";
	СтрокаТипаОбъекта.ТипОбъекта = "ОбщаяКоманда";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "CommandGroup";
	СтрокаТипаОбъекта.Имя = "ГруппаКоманд";
	СтрокаТипаОбъекта.ИмяМнФормы = "ГруппыКоманд";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "CommandGroups";
	СтрокаТипаОбъекта.ТипОбъекта = "ГруппаКоманд";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "Interface";
	СтрокаТипаОбъекта.Имя = "Интерфейс";
	СтрокаТипаОбъекта.ИмяМнФормы = "Интерфейсы";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Interfaces";
	СтрокаТипаОбъекта.ТипОбъекта = "Интерфейс";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "CommonTemplate";
	СтрокаТипаОбъекта.Имя = "ОбщийМакет";
	СтрокаТипаОбъекта.ИмяМнФормы = "ОбщиеМакеты";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "CommonTemplates";
	СтрокаТипаОбъекта.ТипОбъекта = "ОбщийМакет";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "CommonPicture";
	СтрокаТипаОбъекта.Имя = "ОбщаяКартинка";
	СтрокаТипаОбъекта.ИмяМнФормы = "ОбщиеКартинки";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "CommonPictures";
	СтрокаТипаОбъекта.ТипОбъекта = "Картинка";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "XDTOPackage";
	СтрокаТипаОбъекта.Имя = "ПакетXDTO";
	СтрокаТипаОбъекта.ИмяМнФормы = "ПакетыXDTO";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "XDTOPackages";
	СтрокаТипаОбъекта.ТипОбъекта = "ПакетXDTO";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "WebService";
	СтрокаТипаОбъекта.Имя = "WebСервис";
	СтрокаТипаОбъекта.ИмяМнФормы = "WebСервисы";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "WebServices";
	СтрокаТипаОбъекта.ТипОбъекта = "WebСервис";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "HTTPService";
	СтрокаТипаОбъекта.Имя = "HTTPСервис";
	СтрокаТипаОбъекта.ИмяМнФормы = "HTTPСервисы";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "HTTPServices";
	СтрокаТипаОбъекта.ТипОбъекта = "HTTPСервис";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "Style";
	СтрокаТипаОбъекта.Имя = "Стиль";
	СтрокаТипаОбъекта.ИмяМнФормы = "Стили";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Styles";
	СтрокаТипаОбъекта.ТипОбъекта = "Стиль";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "StyleItem";
	СтрокаТипаОбъекта.Имя = "ЭлементСтиля";
	СтрокаТипаОбъекта.ИмяМнФормы = "ЭлементыСтиля";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "StyleItems";
	СтрокаТипаОбъекта.ТипОбъекта = "ЭлементСтиля";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "DocumentNumerator";
	СтрокаТипаОбъекта.Имя = "НумераторДокументов";
	СтрокаТипаОбъекта.ИмяМнФормы = "НумераторыДокументов";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "DocumentNumerators";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "AddressingAttribute";
	СтрокаТипаОбъекта.Имя = "РеквизитАдресации";
	СтрокаТипаОбъекта.ИмяМнФормы = "РеквизитыАдресации";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "AddressingAttributes";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "AccountingFlag";
	СтрокаТипаОбъекта.Имя = "ПризнакУчета";
	СтрокаТипаОбъекта.ИмяМнФормы = "ПризнакиУчета";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "AccountingFlags";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "ExtDimensionAccountingFlag";
	СтрокаТипаОбъекта.Имя = "ПризнакУчетаСубконто";
	СтрокаТипаОбъекта.ИмяМнФормы = "ПризнакиУчетаСубконто";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "ExtDimensionsAccountingFlags";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "Subsystem";
	СтрокаТипаОбъекта.Имя = "Подсистема";
	СтрокаТипаОбъекта.ИмяМнФормы = "Подсистемы";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Subsystems";
	СтрокаТипаОбъекта.ТипОбъекта = "Подсистема";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "WSReference";
	СтрокаТипаОбъекта.Имя = "WSСсылка";
	СтрокаТипаОбъекта.ИмяМнФормы = "WSСсылки";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "WSReferences";
	СтрокаТипаОбъекта.ТипОбъекта = "WSСсылка";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "FunctionalOptionsParameter";
	СтрокаТипаОбъекта.Имя = "ПараметрФункциональныхОпций";
	СтрокаТипаОбъекта.ИмяМнФормы = "ПараметрыФункциональныхОпций";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "FunctionalOptionsParameters";
	СтрокаТипаОбъекта.ТипОбъекта = "ПараметрФункциональнойОпции";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "FunctionalOption";
	СтрокаТипаОбъекта.Имя = "ФункциональнаяОпция";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "FunctionalOptions";
	СтрокаТипаОбъекта.ИмяМнФормы = "ФункциональныеОпции";
	СтрокаТипаОбъекта.ТипОбъекта = "ФункциональнаяОпция";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "CommonAttribute";
	СтрокаТипаОбъекта.Имя = "ОбщийРеквизит";
	СтрокаТипаОбъекта.ИмяМнФормы = "ОбщиеРеквизиты";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "CommonAttributes";
	СтрокаТипаОбъекта.ТипОбъекта = "ОбщийРеквизит";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Template";
	СтрокаТипаОбъекта.Имя = "Макет";
	СтрокаТипаОбъекта.ИмяМнФормы = "Макеты";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Templates";
	СтрокаТипаОбъекта.ТипОбъекта = "Макет";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Predefined";
	СтрокаТипаОбъекта.Имя = "Предопределенный";
	СтрокаТипаОбъекта.ИмяМнФормы = "Предопределенные";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Predefineds";
	СтрокаТипаОбъекта.ТипОбъекта = "ПредопределенныйЭлемент";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Configuration";
	СтрокаТипаОбъекта.Имя = "Конфигурация";
	СтрокаТипаОбъекта.ИмяМнФормы = "Конфигурация";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Configurations";
	СтрокаТипаОбъекта.ТипОбъекта = "Конфигурация";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "Language";
	СтрокаТипаОбъекта.Имя = "Язык";
	СтрокаТипаОбъекта.ИмяМнФормы = "Языки";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Languages";
	СтрокаТипаОбъекта.ТипОбъекта = "Язык";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "EnumValue";
	СтрокаТипаОбъекта.Имя = "ЗначениеПеречисления";
	СтрокаТипаОбъекта.ИмяМнФормы = "ЗначенияПеречисления";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "EnumValues";
	СтрокаТипаОбъекта.ТипОбъекта = "Значение";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Column";
	СтрокаТипаОбъекта.Имя = "Графа";
	СтрокаТипаОбъекта.ИмяМнФормы = "Графы";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Columns";
	СтрокаТипаОбъекта.ТипОбъекта = "Графа";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "ExternalDataSource";
	СтрокаТипаОбъекта.Имя = "ВнешнийИсточникДанных";
	СтрокаТипаОбъекта.ИмяМнФормы = "ВнешниеИсточникиДанных";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "ExternalDataSources";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Table";
	СтрокаТипаОбъекта.Имя = "Таблица";
	СтрокаТипаОбъекта.ИмяМнФормы = "Таблицы";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Tables";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Field";
	СтрокаТипаОбъекта.Имя = "Поле";
	СтрокаТипаОбъекта.ИмяМнФормы = "Поля";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Fields";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Operation";
	СтрокаТипаОбъекта.Имя = "Операция";
	СтрокаТипаОбъекта.ИмяМнФормы = "Операции";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Operations";
	СтрокаТипаОбъекта.ТипОбъекта = "Операция"; // Операция Web-сервиса.
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Parameter";
	СтрокаТипаОбъекта.Имя = "Параметр";
	СтрокаТипаОбъекта.ИмяМнФормы = "Параметры";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Parameters";
	СтрокаТипаОбъекта.ТипОбъекта = "Параметр"; // Параметр операции Web-сервиса.
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "URLTemplate";
	СтрокаТипаОбъекта.Имя = "ШаблонURL";
	СтрокаТипаОбъекта.ИмяМнФормы = "ШаблоныURL";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "URLTemplates";
	СтрокаТипаОбъекта.ТипОбъекта = "ШаблонURL"; // Шаблон URL для HTTP-сервиса.
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Method";
	СтрокаТипаОбъекта.Имя = "МетодШаблонаURL";
	СтрокаТипаОбъекта.ИмяМнФормы = "МетодыШаблонаURL";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Methods";
	СтрокаТипаОбъекта.ТипОбъекта = "МетодШаблонаURL"; // Метод шаблона URL для HTTP-сервиса.
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Aggregate";
	СтрокаТипаОбъекта.Имя = "Агрегат";
	СтрокаТипаОбъекта.ИмяМнФормы = "Агрегаты";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Aggregates";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "Общие";
	СтрокаТипаОбъекта.ИмяАнгл = "DefinedType";
	СтрокаТипаОбъекта.Имя = "ОпределяемыйТип";
	СтрокаТипаОбъекта.ИмяМнФормы = "ОпределяемыеТипы";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "DefinedTypes";
	СтрокаТипаОбъекта.ТипОбъекта = "ОпределяемыйТип";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "StandardTabularSection";
	СтрокаТипаОбъекта.Имя = "СтандартнаяТабличнаяЧасть";
	СтрокаТипаОбъекта.ИмяМнФормы = "СтандартныеТабличныеЧасти";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "StandardTabularSections";
	СтрокаТипаОбъекта.ТипОбъекта = "СтандартнаяТабличнаяЧасть";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "StandardAttribute";
	СтрокаТипаОбъекта.Имя = "СтандартныйРеквизит";
	СтрокаТипаОбъекта.ИмяМнФормы = "СтандартныеРеквизиты";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "StandardAttributes";
	СтрокаТипаОбъекта.ТипОбъекта = "СтандартныйРеквизит";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Ref";
	СтрокаТипаОбъекта.Имя = "Ссылка";
	СтрокаТипаОбъекта.ИмяМнФормы = "Ссылка";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Ref";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "DeletionMark";
	СтрокаТипаОбъекта.Имя = "ПометкаУдаления";
	СтрокаТипаОбъекта.ИмяМнФормы = "ПометкаУдаления";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "DeletionMark";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Predefined";
	СтрокаТипаОбъекта.Имя = "Предопределенный";
	СтрокаТипаОбъекта.ИмяМнФормы = "Предопределенные";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Predefineds";
	СтрокаТипаОбъекта.ТипОбъекта = "ПредопределенныйЭлемент";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "PredefinedDataName";
	СтрокаТипаОбъекта.Имя = "ИмяПредопределенныхДанных";
	СтрокаТипаОбъекта.ИмяМнФормы = "ИмяПредопределенныхДанных";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "PredefinedDataName";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Date";
	СтрокаТипаОбъекта.Имя = "Дата";
	СтрокаТипаОбъекта.ИмяМнФормы = "Дата";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Date";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Number";
	СтрокаТипаОбъекта.Имя = "Номер";
	СтрокаТипаОбъекта.ИмяМнФормы = "Номер";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Number";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Posted";
	СтрокаТипаОбъекта.Имя = "Проведен";
	СтрокаТипаОбъекта.ИмяМнФормы = "Проведен";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Posted";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "LineNumber";
	СтрокаТипаОбъекта.Имя = "НомерСтроки";
	СтрокаТипаОбъекта.ИмяМнФормы = "НомерСтроки";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "LineNumber";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Code";
	СтрокаТипаОбъекта.Имя = "Код";
	СтрокаТипаОбъекта.ИмяМнФормы = "Код";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Code";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Description";
	СтрокаТипаОбъекта.Имя = "Наименование";
	СтрокаТипаОбъекта.ИмяМнФормы = "Наименование";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Description";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Parent";
	СтрокаТипаОбъекта.Имя = "Родитель";
	СтрокаТипаОбъекта.ИмяМнФормы = "Родитель";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Parent";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Owner";
	СтрокаТипаОбъекта.Имя = "Владелец";
	СтрокаТипаОбъекта.ИмяМнФормы = "Владелец";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Owner";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "IsFolder";
	СтрокаТипаОбъекта.Имя = "ЭтоГруппа";
	СтрокаТипаОбъекта.ИмяМнФормы = "ЭтоГруппа";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "IsFolder";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Order";
	СтрокаТипаОбъекта.Имя = "Порядок";
	СтрокаТипаОбъекта.ИмяМнФормы = "Порядок";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Order";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "ThisNode";
	СтрокаТипаОбъекта.Имя = "ЭтотУзел";
	СтрокаТипаОбъекта.ИмяМнФормы = "ЭтотУзел";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "ThisNode";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "OffBalance";
	СтрокаТипаОбъекта.Имя = "Забалансовый";
	СтрокаТипаОбъекта.ИмяМнФормы = "Забалансовый";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "OffBalance";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Executed";
	СтрокаТипаОбъекта.Имя = "Выполнена";
	СтрокаТипаОбъекта.ИмяМнФормы = "Выполнена";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Executed";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "RoutePoint";
	СтрокаТипаОбъекта.Имя = "ТочкаМаршрута";
	СтрокаТипаОбъекта.ИмяМнФормы = "ТочкаМаршрута";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "RoutePoint";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Recorder";
	СтрокаТипаОбъекта.Имя = "Регистратор";
	СтрокаТипаОбъекта.ИмяМнФормы = "Регистратор";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Recorder";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "CalculationType";
	СтрокаТипаОбъекта.Имя = "ВидРасчета";
	СтрокаТипаОбъекта.ИмяМнФормы = "ВидРасчета";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "CalculationType";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "ActionPeriod";
	СтрокаТипаОбъекта.Имя = "ПериодДействия";
	СтрокаТипаОбъекта.ИмяМнФормы = "ПериодДействия";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "ActionPeriod";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "BegOfActionPeriod";
	СтрокаТипаОбъекта.Имя = "ПериодДействияНачало";
	СтрокаТипаОбъекта.ИмяМнФормы = "ПериодДействияНачало";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "BegOfActionPeriod";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "EndOfActionPeriod";
	СтрокаТипаОбъекта.Имя = "ПериодДействияКонец";
	СтрокаТипаОбъекта.ИмяМнФормы = "ПериодДействияКонец";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "EndOfActionPeriod";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "BegOfBasePeriod";
	СтрокаТипаОбъекта.Имя = "БазовыйПериодНачало";
	СтрокаТипаОбъекта.ИмяМнФормы = "БазовыйПериодНачало";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "BegOfBasePeriod";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "EndOfBasePeriod";
	СтрокаТипаОбъекта.Имя = "БазовыйПериодКонец";
	СтрокаТипаОбъекта.ИмяМнФормы = "БазовыйПериодКонец";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "EndOfBasePeriod";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Active";
	СтрокаТипаОбъекта.Имя = "Активность";
	СтрокаТипаОбъекта.ИмяМнФормы = "Активность";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Active";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	Для НомерСубконто = 1 По 10 Цикл
		СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
		СтрокаТипаОбъекта.Группа = "";
		СтрокаТипаОбъекта.ИмяАнгл = "ExtDimension" + НомерСубконто;
		СтрокаТипаОбъекта.Имя = "Субконто" + НомерСубконто;
		СтрокаТипаОбъекта.ИмяМнФормы = "Субконто" + НомерСубконто;
		СтрокаТипаОбъекта.ИмяАнглМнФормы = "ExtDimension" + НомерСубконто;
		СтрокаТипаОбъекта.ТипОбъекта = "";
		
		СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
		СтрокаТипаОбъекта.Группа = "";
		СтрокаТипаОбъекта.ИмяАнгл = "ExtDimensionType" + НомерСубконто;
		СтрокаТипаОбъекта.Имя = "ВидСубконто" + НомерСубконто;
		СтрокаТипаОбъекта.ИмяМнФормы = "ВидСубконто" + НомерСубконто;
		СтрокаТипаОбъекта.ИмяАнглМнФормы = "ExtDimensionType" + НомерСубконто;
		СтрокаТипаОбъекта.ТипОбъекта = "";
	КонецЦикла;
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "ReversingEntry";
	СтрокаТипаОбъекта.Имя = "Сторно";
	СтрокаТипаОбъекта.ИмяМнФормы = "Сторно";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "ReversingEntry";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "RegistrationPeriod";
	СтрокаТипаОбъекта.Имя = "ПериодРегистрации";
	СтрокаТипаОбъекта.ИмяМнФормы = "ПериодРегистрации";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "RegistrationPeriod";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "SentNo";
	СтрокаТипаОбъекта.Имя = "НомерОтправленного";
	СтрокаТипаОбъекта.ИмяМнФормы = "НомерОтправленного";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "SentNo";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "ReceivedNo";
	СтрокаТипаОбъекта.Имя = "НомерПринятого";
	СтрокаТипаОбъекта.ИмяМнФормы = "НомерПринятого";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "ReceivedNo";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Account";
	СтрокаТипаОбъекта.Имя = "Счет";
	СтрокаТипаОбъекта.ИмяМнФормы = "Счет";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Account";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "RecordType";
	СтрокаТипаОбъекта.Имя = "ВидДвижения";
	СтрокаТипаОбъекта.ИмяМнФормы = "ВидДвижения";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "RecordType";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Period";
	СтрокаТипаОбъекта.Имя = "Период";
	СтрокаТипаОбъекта.ИмяМнФормы = "Период";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Period";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Started";
	СтрокаТипаОбъекта.Имя = "Стартован";
	СтрокаТипаОбъекта.ИмяМнФормы = "Стартован";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Started";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "HeadTask";
	СтрокаТипаОбъекта.Имя = "ВедущаяЗадача";
	СтрокаТипаОбъекта.ИмяМнФормы = "ВедущаяЗадача";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "HeadTask";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Completed";
	СтрокаТипаОбъекта.Имя = "Завершен";
	СтрокаТипаОбъекта.ИмяМнФормы = "Завершен";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Completed";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "ActionPeriodIsBasic";
	СтрокаТипаОбъекта.Имя = "ПериодДействияБазовый";
	СтрокаТипаОбъекта.ИмяМнФормы = "ПериодДействияБазовый";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "ActionPeriodIsBasic";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "ValueType";
	СтрокаТипаОбъекта.Имя = "ТипЗначения";
	СтрокаТипаОбъекта.ИмяМнФормы = "ТипЗначения";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "ValueType";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Type";
	СтрокаТипаОбъекта.Имя = "Тип";
	СтрокаТипаОбъекта.ИмяМнФормы = "Тип";// - ЖурналДокументов
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Type";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Type";
	СтрокаТипаОбъекта.Имя = "Вид";
	СтрокаТипаОбъекта.ИмяМнФормы = "Вид";// - ПланСчетов
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Type";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "ExtDimensionTypes";
	СтрокаТипаОбъекта.Имя = "ВидыСубконто";
	СтрокаТипаОбъекта.ИмяМнФормы = "ВидыСубконто";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "ExtDimensionTypes";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "TurnoversOnly";
	СтрокаТипаОбъекта.Имя = "ТолькоОбороты";
	СтрокаТипаОбъекта.ИмяМнФормы = "ТолькоОбороты";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "TurnoversOnly";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "ExtDimensionType";
	СтрокаТипаОбъекта.Имя = "ВидСубконто";
	СтрокаТипаОбъекта.ИмяМнФормы = "ВидСубконто";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "ExtDimensionType";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "BaseCalculationTypes";
	СтрокаТипаОбъекта.Имя = "БазовыеВидыРасчета";
	СтрокаТипаОбъекта.ИмяМнФормы = "БазовыеВидыРасчета";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "BaseCalculationTypes";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "DisplacingCalculationTypes";
	СтрокаТипаОбъекта.Имя = "ВытесняющиеВидыРасчета";
	СтрокаТипаОбъекта.ИмяМнФормы = "ВытесняющиеВидыРасчета";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "DisplacingCalculationTypes";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "LeadingCalculationTypes";
	СтрокаТипаОбъекта.Имя = "ВедущиеВидыРасчета";
	СтрокаТипаОбъекта.ИмяМнФормы = "ВедущиеВидыРасчета";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "LeadingCalculationTypes";
	СтрокаТипаОбъекта.ТипОбъекта = "";
	
	// Модули
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Module";
	СтрокаТипаОбъекта.Имя = "Модуль";
	СтрокаТипаОбъекта.ИмяМнФормы = "Модуль";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Module";
	СтрокаТипаОбъекта.ТипОбъекта = "Модуль";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "CommandModule";
	СтрокаТипаОбъекта.Имя = "МодульКоманды";
	СтрокаТипаОбъекта.ИмяМнФормы = "МодульКоманды";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "CommandModule";
	СтрокаТипаОбъекта.ТипОбъекта = "МодульКоманды";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "ObjectModule";
	СтрокаТипаОбъекта.Имя = "МодульОбъекта";
	СтрокаТипаОбъекта.ИмяМнФормы = "МодульОбъекта";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "ObjectModule";
	СтрокаТипаОбъекта.ТипОбъекта = "МодульОбъекта";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "ManagerModule";
	СтрокаТипаОбъекта.Имя = "МодульМенеджера";
	СтрокаТипаОбъекта.ИмяМнФормы = "МодульМенеджера";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "ManagerModule";
	СтрокаТипаОбъекта.ТипОбъекта = "МодульМенеджера";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "RecordSetModule";
	СтрокаТипаОбъекта.Имя = "МодульНабораЗаписей";
	СтрокаТипаОбъекта.ИмяМнФормы = "МодульНабораЗаписей";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "RecordSetModule";
	СтрокаТипаОбъекта.ТипОбъекта = "МодульНабораЗаписей";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "ValueManagerModule";
	СтрокаТипаОбъекта.Имя = "МодульМенеджераЗначения";
	СтрокаТипаОбъекта.ИмяМнФормы = "МодульМенеджераЗначения";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "ValueManagerModule";
	СтрокаТипаОбъекта.ТипОбъекта = "МодульМенеджераЗначения";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "ApplicationModule";
	СтрокаТипаОбъекта.Имя = "МодульПриложения";
	СтрокаТипаОбъекта.ИмяМнФормы = "МодульПриложения";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "ApplicationModule";
	СтрокаТипаОбъекта.ТипОбъекта = "МодульПриложения";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "ManagedApplicationModule";
	СтрокаТипаОбъекта.Имя = "МодульУправляемогоПриложения";
	СтрокаТипаОбъекта.ИмяМнФормы = "МодульУправляемогоПриложения";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "ManagedApplicationModule";
	СтрокаТипаОбъекта.ТипОбъекта = "МодульУправляемогоПриложения";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "SessionModule";
	СтрокаТипаОбъекта.Имя = "МодульСеанса";
	СтрокаТипаОбъекта.ИмяМнФормы = "МодульСеанса";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "SessionModule";
	СтрокаТипаОбъекта.ТипОбъекта = "МодульСеанса";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "ExternalConnectionModule";
	СтрокаТипаОбъекта.Имя = "МодульВнешнегоСоединения";
	СтрокаТипаОбъекта.ИмяМнФормы = "МодульВнешнегоСоединения";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "ExternalConnectionModule";
	СтрокаТипаОбъекта.ТипОбъекта = "МодульВнешнегоСоединения";
	
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "OrdinaryApplicationModule";
	СтрокаТипаОбъекта.Имя = "МодульОбычногоПриложения";
	СтрокаТипаОбъекта.ИмяМнФормы = "МодульОбычногоПриложения";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "OrdinaryApplicationModule";
	СтрокаТипаОбъекта.ТипОбъекта = "МодульОбычногоПриложения";
	
	// Права
	СтрокаТипаОбъекта = ТаблицаТиповОбъектов.Добавить();
	СтрокаТипаОбъекта.Группа = "";
	СтрокаТипаОбъекта.ИмяАнгл = "Right";
	СтрокаТипаОбъекта.Имя = "Право";
	СтрокаТипаОбъекта.ИмяМнФормы = "Права";
	СтрокаТипаОбъекта.ИмяАнглМнФормы = "Rights";
	СтрокаТипаОбъекта.ТипОбъекта = "Права";
	
	ТаблицаТиповОбъектов.Индексы.Добавить("ИмяАнгл");
	ТаблицаТиповОбъектов.Индексы.Добавить("Имя");
	ТаблицаТиповОбъектов.Индексы.Добавить("ИмяМнФормы");
	ТаблицаТиповОбъектов.Индексы.Добавить("ТипОбъекта");
	
	Возврат ТаблицаТиповОбъектов;
	
КонецФункции

Функция ПреобразоватьОбъектВФайл(ПутьКОбъекту, ЭтоМодуль)
	
	Попытка
		СоставОбъекта = СтрРазделить(ПутьКОбъекту, ".");
		СоставФайла = Новый Массив;
		
		ТипОбъекта = СоставОбъекта[0];
		ИмяОбъекта = СоставОбъекта[1];
		
		СтрокаТипа = ТипыОбъектов.Найти(ТипОбъекта, "Имя");
		СоставФайла.Добавить(СтрокаТипа.ИмяАнглМнФормы);
		СоставФайла.Добавить(СоставОбъекта[1]);
		
		ЭлементОбъекта = СоставОбъекта[2];
		Если ЭлементОбъекта = "Справка" Тогда
			СтрокаЭлемента = ЭлементОбъекта;
		Иначе
			СтрокаЭлемента = ТипыОбъектов.Найти(ЭлементОбъекта, "Имя");
			Если НЕ ЗначениеЗаполнено(СтрокаЭлемента) Тогда
				Лог.Информация("Не найден элемент Имя: %1 в %2", ЭлементОбъекта, ПутьКОбъекту);
				Возврат "";
			КонецЕсли;
			
			Если СоставОбъекта.Количество() > 3 Тогда
				СоставФайла.Добавить(СтрокаЭлемента.ИмяАнглМнФормы);
				СоставФайла.Добавить(СоставОбъекта[3]);
				
				ЭлементОбъекта = СоставОбъекта[4];
				Если ЭлементОбъекта = "Справка" Тогда
					СтрокаЭлемента = ЭлементОбъекта;
				Иначе
					СтрокаЭлемента = ТипыОбъектов.Найти(ЭлементОбъекта, "Имя");
					Если НЕ ЗначениеЗаполнено(СтрокаЭлемента) Тогда
						Лог.Информация("Не найден элемент Имя: %1 в %2", СоставОбъекта[4], ПутьКОбъекту);
						Возврат "";
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если СтрокаЭлемента = "Справка" Тогда
			СоставФайла.Добавить("Ext");
			СоставФайла.Добавить("Help");
			СоставФайла.Добавить("ru.html"); // Только для русского языка!
			
		ИначеЕсли СтрокаЭлемента <> Неопределено Тогда
			
			Если ЭтоМодуль Тогда
				СоставФайла.Добавить("Ext");
				Если СтрокаЭлемента.ИмяАнгл = "Form" Тогда
					СоставФайла.Добавить("Form");
					СоставФайла.Добавить("Module.bsl");
				Иначе
					СоставФайла.Добавить(СтрокаЭлемента.ИмяАнгл + ".bsl");
				КонецЕсли;
			Иначе
				СоставФайла.Добавить(СтрокаЭлемента.ИмяАнгл + ".xml");
			КонецЕсли;
		КонецЕсли;
		
		ПутьКФайлу = СтрСоединить(СоставФайла, ПолучитьРазделительПути());
		
		ТестФайл = Новый Файл(КаталогИсходников + ПутьКФайлу);
		Если НЕ ТестФайл.Существует() Тогда
			ТекстСообщения = "Не найден файл " + ТестФайл.ПолноеИмя;
			Если СтрЗаканчиваетсяНа(ПутьКФайлу, "Form" + ПолучитьРазделительПути() + "Module.bsl") Тогда
				// Проверка наличия нераспакованного файла bin формы обычного приложения
				ТестФайл = Новый Файл(КаталогИсходников + СтрЗаменить(ПутьКФайлу,
					"Form" + ПолучитьРазделительПути() + "Module.bsl",
					"Form.bin"));
				Если ТестФайл.Существует() Тогда
					ТекстСообщения = "Не распакован файл обычной формы " + ТестФайл.ПолноеИмя;
				КонецЕсли;
			КонецЕсли;
			ПутьКФайлу = "";
			Лог.Информация(ТекстСообщения);
		КонецЕсли;
	Исключение
		Лог.Информация("Ошибка разбора объекта %1 (ЭтоМодуль=%2)", ПутьКОбъекту, ЭтоМодуль);
	КонецПопытки;
	
	Возврат ПутьКФайлу;
	
КонецФункции

Процедура ДобавитьНовуюОшибку(ПараметрыОшибки, ОписаниеОшибки)

	НоваяОшибка = ТаблицаОшибок.Добавить();
	НоваяОшибка.ПутьКОбъекту = ПараметрыОшибки.ПутьКОбъекту;
	НоваяОшибка.ПутьКФайлу = КаталогИсходников + ПараметрыОшибки.ПутьКФайлу;
	НоваяОшибка.НачальнаяСтрока = ПараметрыОшибки.НачСтрока - 1;
	НоваяОшибка.НачальнаяКолонка = ПараметрыОшибки.НачКолонка - 1;
	НоваяОшибка.КонечнаяКолонка = ПараметрыОшибки.КонКолонка;

	Если ПустаяСтрока(ПараметрыОшибки.Уточнение) Тогда
		НоваяОшибка.Уточнение = ПараметрыОшибки.Описание;
		НоваяОшибка.ОписаниеОшибки = ПараметрыОшибки.Описание;
	Иначе
		НоваяОшибка.Уточнение = ПараметрыОшибки.Описание;
		НоваяОшибка.ОписаниеОшибки = ПараметрыОшибки.Описание + Символы.ПС + ПараметрыОшибки.Уточнение;
	КонецЕсли;
	
	НоваяОшибка.КодОшибки = ОписаниеОшибки.Код + " " + ОписаниеОшибки.Шаблон;
	НоваяОшибка.Статус = ОписаниеОшибки.Статус;

КонецПроцедуры

#КонецОбласти