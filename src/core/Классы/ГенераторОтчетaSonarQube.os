Перем Формат;
Перем ФорматИмениОшибки;

// BSLLS:UnusedLocalMethod-off
Процедура ПриСозданииОбъекта(Знач ПарамФормат = Неопределено, Знач ПарамФорматИмениОшибки = Неопределено)

	Формат = ПарамФормат;
	ФорматИмениОшибки = ПарамФорматИмениОшибки;

КонецПроцедуры
// BSLLS:UnusedLocalMethod-on

Функция ФорматGenericIssue() Экспорт
	Возврат "GenericIssue";
КонецФункции

Функция ФорматReportJSON() Экспорт
	Возврат "ReportJSON";
КонецФункции

// Выгружает переданную таблицу ошибок в файл ошибок SonarQube
//
Процедура ВыгрузитьОшибкиВФайл(ТаблицаОшибок, Знач ИмяПроекта, Знач ФайлРезультата) Экспорт

	Запись = Новый ЗаписьJSON;
	Запись.ОткрытьФайл(ФайлРезультата, , , Новый ПараметрыЗаписиJSON());
	
	Запись.ЗаписатьНачалоОбъекта(); // корень
	Запись.ЗаписатьИмяСвойства("date");
	Запись.ЗаписатьЗначение(Формат(ТекущаяДата(), "ДФ='yyyy-MM-dd hh:mm:ss'"));
	Запись.ЗаписатьИмяСвойства("fileinfos");
	Запись.ЗаписатьНачалоМассива(); // fileinfos
	
	ТаблицаФайлов = ТаблицаОшибок.Скопировать(, "ПутьКФайлу");
	ТаблицаФайлов.Свернуть("ПутьКФайлу", "");
	
	ОтборПоФайлу = Новый Структура("ПутьКФайлу");
	
	Для Каждого СтрокаФайла Из ТаблицаФайлов Цикл
		
		Запись.ЗаписатьНачалоОбъекта(); // file
		
		Запись.ЗаписатьИмяСвойства("path");
		
		путьКФайлу = "file:///" + СтрЗаменить(СтрокаФайла.ПутьКФайлу, "\", "/");
		
		Запись.ЗаписатьЗначение(путьКФайлу);
		
		Запись.ЗаписатьИмяСвойства("diagnostics");
		Запись.ЗаписатьНачалоМассива(); // diagnostics
		
		ОтборПоФайлу.ПутьКФайлу = СтрокаФайла.ПутьКФайлу;
		СтрокиПроверки = ТаблицаОшибок.НайтиСтроки(ОтборПоФайлу);
		
		Для Каждого СтрокаПроверки Из СтрокиПроверки Цикл
			
			Запись.ЗаписатьНачалоОбъекта(); // item diagnostics
			Запись.ЗаписатьИмяСвойства("range");
			Запись.ЗаписатьНачалоОбъекта(); // range
			
			Запись.ЗаписатьИмяСвойства("start");
			Запись.ЗаписатьНачалоОбъекта();
			Запись.ЗаписатьИмяСвойства("line");
			Запись.ЗаписатьЗначение(СтрокаПроверки.НачальнаяСтрока);
			Запись.ЗаписатьИмяСвойства("character");
			Запись.ЗаписатьЗначение(СтрокаПроверки.НачальнаяКолонка);
			Запись.ЗаписатьКонецОбъекта();
			
			Запись.ЗаписатьИмяСвойства("end");
			Запись.ЗаписатьНачалоОбъекта();
			Запись.ЗаписатьИмяСвойства("line");
			Запись.ЗаписатьЗначение(СтрокаПроверки.НачальнаяСтрока);
			Запись.ЗаписатьИмяСвойства("character");
			Запись.ЗаписатьЗначение(?(СтрокаПроверки.КонечнаяКолонка = 0,
				 СтрокаПроверки.НачальнаяКолонка + 1, СтрокаПроверки.КонечнаяКолонка));
			Запись.ЗаписатьКонецОбъекта();
			
			Запись.ЗаписатьКонецОбъекта(); // range
			
			// severity
			Запись.ЗаписатьИмяСвойства("severity");
			Запись.ЗаписатьЗначение(СтрокаПроверки.Статус);
			
			// code
			Запись.ЗаписатьИмяСвойства("code");
			Запись.ЗаписатьЗначение(СтрокаПроверки.КодОшибки);
			
			// source
			Запись.ЗаписатьИмяСвойства("source");
			Запись.ЗаписатьЗначение(ИмяПроекта);
			
			// message
			Запись.ЗаписатьИмяСвойства("message");
			Запись.ЗаписатьЗначение(СтрокаПроверки.ОписаниеОшибки);
			
			// relatedInformation
			Запись.ЗаписатьИмяСвойства("relatedInformation");
			Запись.ЗаписатьЗначение(Неопределено);
			Запись.ЗаписатьКонецОбъекта(); // item diagnostics
			
		КонецЦикла;
		
		Запись.ЗаписатьКонецМассива(); // diagnostics
		Запись.ЗаписатьКонецОбъекта(); // file
		
	КонецЦикла;
	
	Запись.ЗаписатьКонецМассива(); // fileinfos
	Запись.ЗаписатьКонецОбъекта(); // корень
	Запись.Закрыть();

	Сообщить(СтрШаблон("[%1] Выгружен файл: %2", ТекущаяДата(), ФайлРезультата));

КонецПроцедуры