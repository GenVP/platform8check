////////////////////////////////////////////////////////////
// Описание пакета для сборки и установки
// Полную документацию см. на hub.oscript.io/packaging
//

///////////////////////////////////////////////////////////////////
// Процедуры установки пакета с клиентской машины        
///////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////
// Процедуры сборки пакета                                          
///////////////////////////////////////////////////////////////////


// Вызывается пакетным менеджером перед началом сборки пакета.
// 
// Параметры:
//   РабочийКаталог - Строка - Текущий рабочий каталог с исходниками пакета.
// 
Процедура ПередСборкой(Знач РабочийКаталог) Экспорт
        
    // Удаление каталога включаемых модулей
	УдалитьКаталогБиблиотеки(РабочийКаталог, "Platform8check");
 
    // Сборка библиотеки platform8check
	КомандаOpm = Новый Команда;
	КомандаOpm.УстановитьРабочийКаталог(РабочийКаталог);
	КомандаOpm.УстановитьКоманду("opm");
	КомандаOpm.ДобавитьПараметр("build");	
	КомандаOpm.ДобавитьПараметр("-o");	
	КомандаOpm.ДобавитьПараметр(".\..\");	
	КомандаOpm.ДобавитьПараметр(".\..\");	
        
	КодВозврата = КомандаOpm.Исполнить();

	Если КодВозврата <> 0  Тогда
		ВызватьИсключение КомандаOpm.ПолучитьВывод();
	КонецЕсли;

	МассивФайлов = НайтиФайлы(ОбъединитьПути(РабочийКаталог, ".."), "*.ospx");
	Если МассивФайлов.Количество() <> 1 Тогда
		ВызватьИсключение "Не найден собранный файл пакета platform8check";
	КонецЕсли;
	ИмяфайлаБиблиотеки = МассивФайлов[0].Имя;

    // Установка локальной сборки библиотеки platform8check для плагина
  	КомандаOpm = Новый Команда;
	КомандаOpm.УстановитьРабочийКаталог(РабочийКаталог);
	КомандаOpm.УстановитьКоманду("opm");
	КомандаOpm.ДобавитьПараметр("install");	
	КомандаOpm.ДобавитьПараметр("-l");	
	КомандаOpm.ДобавитьПараметр("-s");	
	КомандаOpm.ДобавитьПараметр(".\..\" + ИмяФайлаБиблиотеки);	
      
	КодВозврата = КомандаOpm.Исполнить();

	Если КодВозврата <> 0  Тогда
		ВызватьИсключение КомандаOpm.ПолучитьВывод();
	КонецЕсли;

КонецПроцедуры

// Вызывается пакетным менеджером после сборки пакета.
// 
// Параметры:
//   РабочийКаталог - Строка - Текущий рабочий каталог с исходниками пакета.
//   ПутьКФайлуПакета - Строка - Полный путь к собранному файлу пакета.
// 
Процедура ПослеСборки(Знач РабочийКаталог, Знач ПутьКФайлуПакета) Экспорт
	УдалитьКаталогБиблиотеки(РабочийКаталог, "Platform8check");
КонецПроцедуры

Процедура УдалитьКаталогБиблиотеки(РабочийКаталог, ИмяБиблиотеки = "")

    КаталогБиблиотек = ОбъединитьПути(РабочийКаталог, "oscript_modules");
    Если НЕ ПустаяСтрока(ИмяБиблиотеки) Тогда
		КаталогБиблиотеки = ОбъединитьПути(КаталогБиблиотек, ИмяБиблиотеки);
		// Удалить файлы включаемой библиотеки
		МассивФайлов = НайтиФайлы(КаталогБиблиотеки, "*.*");
		Если МассивФайлов.Количество() <> 0 Тогда
			УдалитьФайлы(КаталогБиблиотеки);
		КонецЕсли;
	КонецЕсли;
	// Удаление каталога включаемых библиотек, если он пустой
	МассивФайлов = НайтиФайлы(КаталогБиблиотек, "*.*");
	Если МассивФайлов.Количество() = 0 Тогда
		УдалитьФайлы(КаталогБиблиотек);
	КонецЕсли;

КонецПроцедуры

Описание.Имя("platform8check_plugin")
        .Версия("1.0.1")
        .Автор("GenV")
        .Описание("Плагин gitsync для выгрузки результатов платформенной проверки в SonarQube")
        .ВерсияСреды("1.2.0")
        .ВключитьФайл("src")
        .ВключитьФайл("oscript_modules")
        .ВключитьФайл("packagedef")
        .ЗависитОт("logos", "1.0.3")
        .ЗависитОт("tempfiles")
        .ЗависитОт("platform8check")
        .ОпределяетКласс("Плагин_platform8check","src/Классы/platform8checkPlugin.os");
